python -m venv venv (To create virtual environment)

Make sure the python intrepreter points to this

.\venv\Scripts\activate.bat ( to use virtual environment in command prompt as well)

Make sure to use cmd terminal install of powershell. Once the above command is executed, will get a (venv) prompt before the shell. 

Install fastapi in venv - https://fastapi.tiangolo.com/#installation

pip install fastapi[all] 

pip freeze -- Shows all the dependencies that got installed

https://stackoverflow.com/questions/18966564/pip-freeze-vs-pip-list

main.py serves the request. write the code. once done, to start the server

uvicorn main:app

Uvicorn running on http://127.0.0.1:8000

Swagger/docs running on http://127.0.0.1:8000/docs 

if we make changes to the code and save it, it won't reflect. we need to rerun the server

uvicorn main:app --reload

HTTP status codes

psycopg2 - Python postgres connector 

pip install psycopg2

Sqlalchemy - Popular python ORM - Object relation model. Instead of SQL, we can define the table and write python code which internally gets converted to SQL. Layer of abstraction. SQLalchemy cannot directly work with databases, we need a driver as well 

pip install sqlalchemy

pydantic/schema model and sqlalchemy/orm model
1. request/response        1. DB structure and query

Password hashing

pip install passlib[bcrypt]

Authentication

JWT Token Authentication

pip install python-jose[cryptography]

environment variables in postman - dev and post response setting variables

query parameters

url?search=sometext%20some&limit=10

% means space
& to pass multiple params

env variables

env variables will always be in str

echo %path% - windows

linux
echo %path 
printenv
export path='//'

Vote/like model

user can like a post only once

composite key - primary key that spans multiple columns, for above case, create a table with post ID and user ID. Both of them together should be unique, so we can create a composite key on both

Database migrations:

Alembic tool allows incremental changes to database models. current shortcoming is once the model is created. it creates the table and we can no longer make new changes to it. We have to drop the table and start the model again for the effects to take place

pip install alembic

in cmd prompt

alembic init

alembic revision -m "create table n_post"

alembic current / alembic heads

alembic upgrade <revision no> or alembic downgrade -1 or alembic upgrade heads

alembic revision --autogenerate -m "Create databases from sqlalchemy models file"

CORS:
cross origin resource sharing

fetch('http://localhost:8080/').then(res => res.json()).then(console.log)